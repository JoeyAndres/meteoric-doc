Template.ComponentBlazeList.helpers({
    basic_snippet: function() {
        return marked(["```handlebars",
            `{{#ionList}}`,
            ``,
            `  {{#each items}}`,
            `    {{#ionItem class="item-avatar-left item-button-right"}}`,
            `      {{#ionItemContent}}`,
            `        <img src="https://randomuser.me/api/portraits/thumb/men/27.jpg">`,
            ``,
            `        <!--Get the data context of its parent which is the integer inside items array.-->`,
            `        <h2>John Smith {{{..}}}</h2>`,
            `        <p>(555) 555-1212</p>`,
            `        <button class="button button-assertive">{{> ionIcon icon="ios-telephone"}}</button>`,
            `      {{/ionItemContent}}`,
            `    {{/ionItem}}`,
            `  {{/each}}`,
            ``,
            `{{/ionList}}`,
            "```"
        ].join("\n"));
    },

    advance_blaze_snippet: function() {
        return marked(["```handlebars",
            `{{#ionList onReorder=onReorder showDelete=deletable showReorder=sortable canSwipe=true}}`,
            `  {{#each items}}`,
            `    {{#ionItem class="item-avatar-left"}}`,
            `      {{#ionItemContent}}`,
            `        <img src="https://randomuser.me/api/portraits/thumb/men/27.jpg">`,
            `        <h2>John Smith {{..}}</h2>`,
            `        <p>(555) 555-1212</p>`,
            `      {{/ionItemContent}}`,
            ``,
            `      {{#ionItemOptions}}`,
            `        {{#ionOptionButton class="button-info"}}`,
            `          Share`,
            `        {{/ionOptionButton}}`,
            `        {{#ionOptionButton class="button-assertive"}}`,
            `          Edit`,
            `        {{/ionOptionButton}}`,
            `      {{/ionItemOptions}}`,
            ``,
            `      {{#ionDeleteButton class="ion-minus-circled"}}{{/ionDeleteButton}}`,
            `      {{#ionReorderButton class="ion-navicon"}}{{/ionReorderButton}}`,
            `    {{/ionItem}}`,
            `  {{/each}}`,
            `{{/ionList}}`,
            "```"
        ].join("\n"));
    },

    advance_js_snippet: function() {
        return marked(["```js",
            `Template.listsComplex.onCreated(function(){`,
            `  this.items = new ReactiveVar([]);`,
            `  this.sortable = new ReactiveVar(false);  // set this to true to display ionReorderButton`,
            `  this.deletable = new ReactiveVar(false);  // set this to true to display ionDeleteButton`,
            `  _(20).items((n) => this.items.get().push(n + 1));  // 0 based counting is causing errors for some reason.`,
            `});`,

            ``,
            `Template.listsComplex.helpers({`,
            `  items: function () {`,
            `    return Template.instance().items.get();`,
            `  },`,
            ``,
            `  onReorder: function() {`,
            `    // Template.instance() changes depending where it is called, thus establish correct one now.`,
            `    let template = Template.instance();`,
            `    return (item, fromIndex, toIndex) => {`,
            `      // The callback we gave just reorder the model (items above). Change this to your specific model.`,
            `      let newItems = template.items.get();`,
            `      let oldFrom = newItems[fromIndex];`,
            `      newItems[fromIndex] = newItems[toIndex];`,
            `      newItems[toIndex] = oldFrom;`,
            `      template.items.set(newItems);`,
            `    }`,
            `  },`,
            ``,
            `  sortable: function() {`,
            `    return Template.instance().sortable.get();`,
            `  },`,
            ``,
            `  deletable: function () {`,
            `    return Template.instance().deletable.get();`,
            `  }`,
            `});`,
            "```"
        ].join("\n"));
    }
});